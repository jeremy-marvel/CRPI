&ACCESS RVO1
&REL 17
&PARAM TEMPLATE = C:\KRC\Roboter\Template\FunctionVorgabe
&PARAM EDITMASK = *
DEFFCT REAL GET_FREQ(TIMER_NO:IN, RESET_TIMER:IN)
  ; ------------------------------------------------------
  ; AUTHOR:    JEREMY MARVEL
  ; SYSTEM:    KUKA ASSEMBLY PRIMITIVES
  ; SUBSYSTEM: HELPER FUNCTIONS
  ; FILE:      GET_FREQ.SRC
  ;
  ; SIMPLE TIMER/FREQUENCY FUNCTION WITH ERROR HANDLING
  ; -----------------------------------------------------

  DECL INT TIMER_NO
  DECL BOOL RESET_TIMER
  REAL ALPHA, RET_VAL

  ALPHA = 0.5

  IF (TIMER_NO > 0) AND (TIMER_NO < 11) THEN
    NEW_TIMER[TIMER_NO] = $TIMER[TIMER_NO]
    IF RESET_TIMER THEN
      PROG_FREQ[TIMER_NO] = LAST_KNOWN_FREQ
      $TIMER[TIMER_NO] = 0
      $TIMER_STOP[TIMER_NO] = FALSE
    ELSE
      IF (NEW_TIMER[TIMER_NO] - OLD_TIMER[TIMER_NO]) <= 0 THEN
        $TIMER_STOP[TIMER_NO] = FALSE ; RESTART TIMER, JUST IN CASE
        OLD_TIMER[TIMER_NO] = NEW_TIMER[TIMER_NO] - 1.0;
      ELSE
        PROG_FREQ[TIMER_NO] = (ALPHA * PROG_FREQ[TIMER_NO]) + ((1.0 - ALPHA) * (1000.0 / (NEW_TIMER[TIMER_NO] - OLD_TIMER[TIMER_NO])))
      ENDIF
    ENDIF
    OLD_TIMER[TIMER_NO] = NEW_TIMER[TIMER_NO]
    RET_VAL = PROG_FREQ[TIMER_NO]
  ELSE
    ; INVALID TIMER NUMBER
    RET_VAL = -1.0
  ENDIF

  RETURN(RET_VAL)
ENDFCT