&ACCESS RVO1
&REL 82
&PARAM TEMPLATE = C:\KRC\Roboter\Template\FunctionVorgabe
&PARAM EDITMASK = *
DEFFCT BOOL APPLY_OFFSET(COUNT:IN, X:OUT, Y:OUT, Z:OUT, Z_ROT:OUT, PARAM:IN )
  ;FOLD DECLARE FUNCTION ARGUMENTS

  ;DECL SEARCH_TYPE STYPE
  INT COUNT
  REAL X, Y, Z, Z_ROT
  ;DECL PARAM_SET PARAMS
  DECL SEARCH_PARAM PARAM
  ;ENDFOLD
  ;FOLD DECLARE INTERNAL VARIABLES
  REAL X_DELTA, Y_DELTA, Z_DELTA
  REAL Z_ROT_DELTA
  INT LOCAL_COUNT, WHOLE
  REAL RADIUS, POSITION, RATIO, DECI, TEMP
  ;ENDFOLD  

  ;FOLD INITIALIZE INTERNAL VARIABLES TO 0

  X_DELTA = 0.0
  Y_DELTA = 0.0
  Z_DELTA = 0.0
  Z_ROT_DELTA = 0.0
  RADIUS = 0.0
  POSITION = 0.0
  RATIO = 0.0
  WHOLE = 0
  DECI = 0.0
  TEMP = 0.0
  ;ENDFOLD

  SWITCH PARAM.STYPE
    CASE #SPIRAL
      LOCAL_COUNT = MOD(COUNT, (PARAM.THETA_MAX_ / PARAM.DEG_OFFSET_DELTA_))
      PARAM.DEG_OFFSET_ = LOCAL_COUNT * PARAM.DEG_OFFSET_DELTA_
      RADIUS = PARAM.DEG_OFFSET_ * PARAM.RADIUS_OFFSET_

      X_DELTA = RADIUS * COS(PARAM.DEG_OFFSET_)
      Y_DELTA = RADIUS * SIN(PARAM.DEG_OFFSET_)

    CASE #RASTER
      TEMP = PARAM.TOTAL_LENGTH_ / PARAM.LENGTH_DELTA_

      LOCAL_COUNT = MOD(COUNT, (2.0 * TEMP))
      IF LOCAL_COUNT > TEMP THEN
        LOCAL_COUNT = (2.0 * TEMP) - LOCAL_COUNT
      ENDIF

      POSITION = LOCAL_COUNT * PARAM.LENGTH_DELTA_
      RATIO = POSITION / (PARAM.WIDTH + PARAM.LENGTH_STEP_)
      DECI = DECIMAL(RATIO)
      WHOLE = RATIO - DECI

      IF DECI > PARAM.RASTER_RATIO_ THEN
        ; In the raster step
        IF EVEN(WHOLE) THEN
          Y_DELTA = PARAM.WIDTH
        ELSE
          Y_DELTA = 0.0
        ENDIF
        TEMP = (DECI - PARAM.RASTER_RATIO_) / (1.0 - PARAM.RASTER_RATIO_)
        X_DELTA = (WHOLE + TEMP) * PARAM.LENGTH_STEP_
      ELSE
        ; On the raster
        TEMP = DECI / PARAM.RASTER_RATIO_
        IF EVEN(WHOLE) THEN
          Y_DELTA = TEMP * PARAM.LENGTH
        ELSE
          Y_DELTA = (1.0 - TEMP) * PARAM.LENGTH
        ENDIF
        X_DELTA = WHOLE * PARAM.LENGTH_STEP_
      ENDIF
    CASE #CIRCLE
      LOCAL_COUNT = MOD(COUNT, (360.0 / PARAM.DEG_OFFSET_DELTA_))
      TEMP = LOCAL_COUNT * PARAM.DEG_OFFSET_DELTA_
      X_DELTA = PARAM.RADIUS - (PARAM.RADIUS * COS(TEMP))
      Y_DELTA = PARAM.RADIUS * SIN(TEMP)
    CASE #ROTATE
      TEMP = COUNT * PARAM.DEG_OFFSET_DELTA_
      Z_ROT_DELTA = PARAM.MAGNITUDE * SIN(TEMP)
    CASE #HOP
      TEMP = COUNT * PARAM.DEG_OFFSET_DELTA_
      Z_DELTA = PARAM.MAGNITUDE * SIN(TEMP)
    CASE #LINEAR
      TEMP = PARAM.TOTAL_LENGTH_ / PARAM.LENGTH_STEP_
      LOCAL_COUNT = MOD(COUNT, (2.0 * TEMP))
      IF LOCAL_COUNT > TEMP THEN
        LOCAL_COUNT = (2.0 * TEMP) - LOCAL_COUNT
      ENDIF
      X_DELTA = LOCAL_COUNT * PARAM.X_OFFSET_
      Y_DELTA = LOCAL_COUNT * PARAM.Y_OFFSET_
      Z_DELTA = LOCAL_COUNT * PARAM.Z_OFFSET_
    CASE #CONSTOFFSET
      TEMP = PARAM.TOTAL_LENGTH_ / PARAM.LENGTH_STEP_
      LOCAL_COUNT = MOD(COUNT, TEMP)
      IF COUNT < TEMP THEN
        X_DELTA = COUNT * PARAM.X_OFFSET_
        Y_DELTA = COUNT * PARAM.Y_OFFSET_
        Z_DELTA = COUNT * PARAM.Z_OFFSET_
      ELSE
        X_DELTA = PARAM.X
        Y_DELTA = PARAM.Y
        Z_DELTA = PARAM.Z
      ENDIF
  ENDSWITCH

  X = X + X_DELTA
  Y = Y + Y_DELTA
  Z = Z + Z_DELTA
  Z_ROT = Z_ROT + Z_ROT_DELTA
  RETURN(TRUE)
ENDFCT