&ACCESS RVO
&REL 28
&PARAM TEMPLATE = C:\KRC\Roboter\Template\vorgabe
&PARAM EDITMASK = *
DEF FAILTEST( )

; Zero
; One move for rel
; One move for inverse and one for forward
; Zero

DECL INT X
DECL REAL INPUT[6]
DECL BOOL RESULT

;FOLD INI
  ;FOLD BASISTECH INI
    GLOBAL INTERRUPT DECL 3 WHEN $STOPMESS==TRUE DO IR_STOPM ( )
    INTERRUPT ON 3 
    BAS (#INITMOV,0 )
  ;ENDFOLD (BASISTECH INI)
  ;FOLD USER INI
    ;Make your modifications here

  ;ENDFOLD (USER INI)
;ENDFOLD (INI)


;$BASE=BASE_DATA[1]
;$TOOL=TOOL_DATA[1]

FOR X=1 TO 6
 $ACC_AXIS[X]=70
 $VEL_AXIS[X]=70
ENDFOR

;FOLD PTP HOME  Vel= 100 % DEFAULT;%{PE}%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART = FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS (#PTP_PARAMS,100 )
$H_POS=XHOME
PTP  XHOME
;ENDFOLD

;FAILURE TESTS
;ABSOLUTE
;A1 under
INPUT[1]=-180
INPUT[2]=90
INPUT[3]=0
INPUT[4]=0
INPUT[5]=0
INPUT[6]=0
RESULT = ABS_ANG(INPUT[])

;A1 over
INPUT[1]=180
RESULT = ABS_ANG(INPUT[])

;A2 under
INPUT[1]=0
INPUT[2]=-45
RESULT = ABS_ANG(INPUT[])

;A2 over
INPUT[2]=230
RESULT = ABS_ANG(INPUT[])

;A3 under
INPUT[2]=90
INPUT[3]=-130
RESULT = ABS_ANG(INPUT[])

;A3 over
INPUT[3]=130
RESULT = ABS_ANG(INPUT[])

;A4 under
INPUT[3]=0
INPUT[4]=-180
RESULT = ABS_ANG(INPUT[])

;A4 over
INPUT[4]=180
RESULT = ABS_ANG(INPUT[])

;A5 under
INPUT[4]=0
INPUT[5]=-130
RESULT = ABS_ANG(INPUT[])

;A5 over
INPUT[5]=130
RESULT = ABS_ANG(INPUT[])

;A6 under
INPUT[5]=0
INPUT[6]=-180
RESULT = ABS_ANG(INPUT[])

;A6 over
INPUT[6]=180
RESULT = ABS_ANG(INPUT[])

;X under
INPUT[1]=-800
INPUT[2]=0
INPUT[3]=1178.48
INPUT[4]=0
INPUT[5]=0
INPUT[6]=0
RESULT = ABS_TCP(INPUT[],"P")

;X over
INPUT[1]=800
RESULT = ABS_TCP(INPUT[],"L")

;Y under
INPUT[1]=0
INPUT[2]=-800
RESULT = ABS_TCP(INPUT[],"L")

;Y over
INPUT[2]=800
RESULT = ABS_TCP(INPUT[],"P")

;Z under
INPUT[2]=0
INPUT[3]=-1
RESULT = ABS_TCP(INPUT[],"P")


;RELATIVE
;This line should succeed
INPUT[1]=30
INPUT[2]=60
INPUT[3]=-90
INPUT[4]=0
INPUT[5]=60
INPUT[6]=30
RESULT = ABS_ANG(INPUT[])

;A1 under
INPUT[1]=-210
INPUT[2]=0
INPUT[3]=0
INPUT[4]=0
INPUT[5]=0
INPUT[6]=0
RESULT = REL_ANG(INPUT[])

;A1 over
INPUT[1]=150
RESULT = REL_ANG(INPUT[])

;A2 under
INPUT[1]=0
INPUT[2]=-105
RESULT = REL_ANG(INPUT[])

;A2 over
INPUT[2]=170
RESULT = REL_ANG(INPUT[])

;A3 under
INPUT[2]=0
INPUT[3]=-40
RESULT = REL_ANG(INPUT[])

;A3 over
INPUT[3]=220
RESULT = REL_ANG(INPUT[])

;A4 under
INPUT[3]=0
INPUT[4]=-180
RESULT = REL_ANG(INPUT[])

;A4 over
INPUT[4]=180
RESULT = REL_ANG(INPUT[])

;A5 under
INPUT[4]=0
INPUT[5]=-190
RESULT = REL_ANG(INPUT[])

;A5 over
INPUT[5]=70
RESULT = REL_ANG(INPUT[])

;A6 under
INPUT[5]=0
INPUT[6]=-220
RESULT = REL_ANG(INPUT[])

;A6 over
INPUT[6]=150
RESULT = REL_ANG(INPUT[])

;X under
INPUT[6]=0
INPUT[1]=-1500
RESULT = REL_TCP(INPUT[],"P")

;X over
INPUT[1]=1500
RESULT = REL_TCP(INPUT[],"L")

;Y under
INPUT[1]=0
INPUT[2]=-1500
RESULT = REL_TCP(INPUT[],"L")

;Y over
INPUT[2]=1500
RESULT = REL_TCP(INPUT[],"P")

;Z under
INPUT[2]=0
INPUT[3]=-1800
RESULT = REL_TCP(INPUT[],"L")

;Check position inverse kinematics
;Should move, then not trip A3 limit
;INPUT[1] =  -33.75
;INPUT[2] = -578.25
;INPUT[3] =  650
;INPUT[4] =  123
;INPUT[5] =   87
;INPUT[6] = -145
;RESULT   = ABS_TCP(INPUT[], "P")

;INPUT[3] =  525
;RESULT   = ABS_TCP(INPUT[], "P")

;Check angle forward kinematics
;Should move, then not exceed limits
;INPUT[1] = -90
;INPUT[2] =  90
;INPUT[3] =  65
;INPUT[4] =   0
;INPUT[5] = -20
;INPUT[6] =   0
;RESULT   = ABS_ANG(INPUT[])

;INPUT[2] =  60
;INPUT[3] =  25
;INPUT[5] = -30
;RESULT   = ABS_ANG(INPUT[])

;FOLD PTP HOME  Vel= 100 % DEFAULT;%{PE}%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:100, 7:DEFAULT
$BWDSTART = FALSE
PDAT_ACT=PDEFAULT
FDAT_ACT=FHOME
BAS (#PTP_PARAMS,100 )
$H_POS=XHOME
PTP  XHOME
;ENDFOLD

END